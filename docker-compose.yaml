services:
  postgres:
    image: x-postgres:${DOCKER_IMAGE_VERSION} # 使用刚才构建的镜像
    container_name: x-postgres
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./docker-data/postgres:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:5432" # 使用 .env 中的 POSTGRES_PORT
    networks:
      - networkX # 确保这个网络在下面有定义
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      retries: 5

  redis:
    image: x-redis:${DOCKER_IMAGE_VERSION} # 使用刚才构建的镜像
    container_name: x-redis
    ports:
      - "${REDIS_PORT}:6379" # 使用 .env 中的 REDIS_PORT
    networks:
      - networkX # 确保这个网络在下面有定义
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 10s
      retries: 5

  minio:
    image: x-minio:${DOCKER_IMAGE_VERSION}
    container_name: x-minio
    environment:
      MINIO_ROOT_USER: "${MINIO_ROOT_USER}"
      MINIO_ROOT_PASSWORD: "${MINIO_ROOT_PASSWORD}"
      MINIO_ACCESS_KEY: "${MINIO_ACCESS_KEY}"
      MINIO_SECRET_KEY: "${MINIO_SECRET_KEY}"
    ports:
      - "${MINIO_API_PORT}:9000" # MinIO 控制台端口
      - "${MINIO_CONSOLE_PORT}:9001" # MinIO 客户端端口
    volumes:
      - ./docker-data/minio:/data
    command: server --address 0.0.0.0:9000 --console-address 0.0.0.0:9001 /data
    networks:
      - networkX
    healthcheck:
      test:
        [
          "CMD",
          "mc",
          "alias",
          "set",
          "myminio",
          "http://localhost:9000",
          "${MINIO_ACCESS_KEY}",
          "${MINIO_SECRET_KEY}",
        ]
      interval: 5s
      retries: 5

  # log:
  #   image: x-log:${DOCKER_IMAGE_VERSION}
  #   container_name: x-grafana-loki-promtail
  #   ports:
  #     - "3000:3000" # Grafana
  #     - "3100:3100" # Loki
  #     - "9080:9080" # Promtail
  #   environment:
  #     - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER} # Grafana Admin 用户名
  #     - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD} # Grafana Admin 密码
  #     - GF_SERVER_ROOT_URL=${GF_SERVER_ROOT_URL}
  #     - GF_SERVER_DOMAIN=${GF_SERVER_DOMAIN}
  #     - GF_SERVER_HTTP_PORT=${GF_SERVER_HTTP_PORT}
  #     - LOKI_PORT=${LOKI_PORT}
  #     - PROMTAIL_PORT=${PROMTAIL_PORT}
  #   volumes:
  #     - ./config/grafana.ini:/etc/grafana/grafana.ini
  #     - ./config/loki-config.yaml:/etc/loki/loki-config.yaml
  #     - ./config/promtail-config.yaml:/etc/promtail/promtail-config.yaml
  #   networks:
  #     - networkX

networks:
  networkX: # 定义正确的网络
    driver: bridge # 网络驱动器

name: artisan-cloud-x
